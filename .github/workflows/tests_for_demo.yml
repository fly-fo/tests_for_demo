name: tests_for_demo

env:
  ALLURE_ENDPOINT: https://demo.testops.cloud/
  ALLURE_PROJECT_ID: 4535
  ALLURE_TOKEN: ${{ secrets.ALLURE_TOKEN }}
  ALLURE_RESULTS: "allure-results"
  BROWSER: ${{ github.event.inputs.BROWSER || 'chrome' }}
  OS: ${{ github.event.inputs.OS || 'macOS-latest' }}
  BRANCH: ${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      ALLURE_JOB_RUN_ID:
        description: "Allure TestOps Job Run ID"
        required: false
      BROWSER:
        description: "Browser to run tests in"
        required: false
        default: "chrome"
      OS:
        description: "OS to run tests on"
        required: false
        default: "macOS-latest"

jobs:
  autotests: 
    name: Run tests
    runs-on: ${{ github.event.inputs.OS || 'macOS-latest' }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug environment variables
        run: |
          echo "ALLURE_ENDPOINT: $ALLURE_ENDPOINT"
          echo "ALLURE_PROJECT_ID: $ALLURE_PROJECT_ID"
          echo "BRANCH: $BRANCH"

      - name: Install allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: https://demo.testops.cloud/
          allure-token: ${{ env.ALLURE_TOKEN }}
          allure-project-id: 4535
          
      - name: Ensure allure-results directory exists
        run: |
          mkdir -p ${ALLURE_RESULTS}

      - name: Run tests
        run: |
          pytest --alluredir=${ALLURE_RESULTS} --capture=no
        env:
          BROWSER: ${{ github.event.inputs.BROWSER || 'chrome' }}

      - name: Upload results to Allure TestOps
        if: always()
        run: |
          allurectl upload ${ALLURE_RESULTS} \
            --job-run-id ${{ github.event.inputs.ALLURE_JOB_RUN_ID }} \
            --launch-name "GitHub Run ${{ github.run_id }}" \
            --launch-tag branch:$BRANCH \
            --launch-tag os:${{ github.event.inputs.OS || 'macOS-latest' }} \
            --launch-tag browser:${{ github.event.inputs.BROWSER || 'chrome' }}
